## <summary>policy for oracle</summary>

########################################
## <summary>
##	Transition to execute oracle_exec_t in the oracle domain.
## </summary>
## <param name="role">
## <summary>
##	Role allowed to transition into oracle domain
## </summary>
## </param>
## <param name="type">
## <summary>
##	Type allowed to transition into oracle domain
## </summary>
## </param>
#
interface(`oracle_exec_roletrans_from',`
	gen_require(`
	    role oracle_r;
		type oracle_t, oracle_exec_t;
	')

	allow $1 oracle_r;
	role_transition $1 oracle_exec_t oracle_r;
	domtrans_pattern($2, oracle_exec_t, oracle_t)
')

## <summary>policy for oracle</summary>

########################################
## <summary>
##	Transition to execute oracle_lsnr_exec_t in the oracle_lsnr domain.
## </summary>
## <param name="role">
## <summary>
##	Role allowed to transition into oracle listener domain
## </summary>
## </param>
## <param name="type">
## <summary>
##	Type allowed to transition into oracle listener domain
## </summary>
## </param>
#
interface(`oracle_lsnr_exec_roletrans_from',`
	gen_require(`
	    role oracle_lsnr_r;
		type oracle_lsnr_t, oracle_lsnr_exec_t;
	')

	allow $1 oracle_lsnr_r;
	role_transition $1 oracle_lsnr_exec_t oracle_lsnr_r;
	domtrans_pattern($2, oracle_lsnr_exec_t, oracle_lsnr_t)
')

########################################
## <summary>
##	Execute oracle_exec_t in the oracle domain.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`oracle_domtrans',`
	gen_require(`
		type oracle_t, oracle_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, oracle_exec_t, oracle_t)
')

######################################
## <summary>
##	Execute oracle in the caller domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`oracle_exec',`
	gen_require(`
		type oracle_exec_t;
	')

	corecmd_search_bin($1)
	can_exec($1, oracle_exec_t)
')


######################################
## <summary>
##	Allow oracle to list process of the caller domain.
## </summary>
## <param name="domain">
##	<summary>
##	Oracle can list process of domain
##	</summary>
## </param>
#
interface(`oracle_list_proc',`
	gen_require(`
		type oracle_t;
	')

	ps_process_pattern(oracle_t, $1)
')

######################################
## <summary>
##	Allow oracle listener to list process of the caller domain.
## </summary>
## <param name="domain">
##	<summary>
##	Oracle listener can list process of domain
##	</summary>
## </param>
#
interface(`oracle_lsnr_list_proc',`
	gen_require(`
		type oracle_lsnr_t;
	')

	ps_process_pattern(oracle_lsnr_t, $1)
')

######################################
## <summary>
##	Allow domain to use oracle libraries
## </summary>
## <param name="domain">
##	<summary>
##	Domain permitted to exec libraries
##	</summary>
## </param>
#
interface(`oracle_use_libs',`
        gen_require(`
                type oracle_lib_t;
        ')

	allow $1 oracle_lib_t:file execmod;
        list_dirs_pattern($1, oracle_lib_t, oracle_lib_t)
        read_files_pattern($1, oracle_lib_t, oracle_lib_t)
        read_lnk_files_pattern($1, oracle_lib_t, oracle_lib_t)
        mmap_exec_files_pattern($1, oracle_lib_t, oracle_lib_t)
')

########################################
## <summary>
##      Connect to oracle unix stream socket.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`oracle_noatsecure',`
        gen_require(`
                type oracle_t, oracle_lsnr_t;
        ')

    allow $1 { oracle_t oracle_lsnr_t }:process { noatsecure rlimitinh siginh };
')

########################################
## <summary>
##      Allow domain to execute oracle process transitions even if the filesystem is marked nosuid
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#

interface(`oracle_nosuid_transition',`
    gen_require(`
        type oracle_t, oracle_lsnr_t;
    ')

    allow $1 { oracle_t oracle_lsnr_t }:process2 nosuid_transition;
')

